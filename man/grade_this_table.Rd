% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grade_this.R
\name{grade_this_table}
\alias{grade_this_table}
\title{Grade this table}
\usage{
grade_this_table(
  correct = NULL,
  pre_check = NULL,
  post_check = NULL,
  pass_if_equal = TRUE,
  ...,
  max_diffs = 3,
  check_class = TRUE,
  check_names = TRUE,
  check_dimensions = TRUE,
  check_groups = TRUE,
  check_columns = TRUE,
  check_column_class = check_columns,
  check_column_values = check_columns,
  hint = getOption("gradethis.fail.hint", FALSE),
  encourage = getOption("gradethis.fail.encourage", FALSE),
  pass.praise = NULL,
  fail.message = NULL,
  fail.hint = hint,
  fail.encourage = encourage
)
}
\arguments{
\item{correct}{\verb{[character(1)]}\cr The message shown to the student when
their \code{.result} matches the exercise \code{.solution}, if \code{pass_if_equal} is
\code{TRUE}.}

\item{pre_check, post_check}{\verb{[expression]}\cr Code to run before or after the
table or vector grading is performed. The pre check runs before calling
\code{\link[gradethis:pass_if_equal]{gradethis::pass_if_equal()}} so that you can modify or adjust the student's
\code{.result} or the \code{.solution} if there are parts of either that need to be
ignored. These arguments can also be used in conjunction with the
\code{pass_if_equal} option when the grading requirements are more involved.}

\item{pass_if_equal}{\verb{[logical(1)]}\cr When \code{TRUE} (default), the \code{.result}
is compared to the \code{.solution} with \code{\link[gradethis:pass_if_equal]{gradethis::pass_if_equal()}} after the
\emph{pre check} and before calling the \pkg{tblcheck} grading function. When
\code{FALSE}, you will need to include your own call to \code{\link[gradethis:graded]{gradethis::pass()}} in
either \code{pre_check} or \code{post_check} for the student to be able to receive a
passing grade.}

\item{...}{Additional arguments passed to \code{graded()} or additional data to be
included in the feedback object.}

\item{max_diffs}{\verb{[numeric(1)]}\cr The maximum number of mismatched values to
display in an informative failure message.
Passed to \code{\link[=tbl_check_names]{tbl_check_names()}} to determine the number of mismatched column
names to display and the \code{n_values} argument of \code{\link[=tbl_check_column]{tbl_check_column()}} to
determine the number of mismatched column values to display.
Defaults to 3.}

\item{check_class}{\verb{[logical(1)]}\cr Whether to check that \code{object} and
\code{expected} have the same classes with \code{\link[=tbl_check_class]{tbl_check_class()}}.}

\item{check_names}{\verb{[logical(1)]}\cr Whether to check that \code{object} and
\code{expected} have the same column names with \code{\link[=tbl_check_names]{tbl_check_names()}}.}

\item{check_dimensions}{\verb{[logical(1)]}\cr Whether to check that \code{object} and
\code{expected} have the same number of rows and columns
with \code{\link[=tbl_check_dimensions]{tbl_check_dimensions()}}.}

\item{check_groups}{\verb{[logical(1)]}\cr Whether to check that \code{object} and
\code{expected} have the same \link[dplyr:group_by]{groups}
with \code{\link[dplyr:group_data]{dplyr::group_vars()}}.}

\item{check_columns}{\verb{[logical(1)]}\cr Whether to check that all columns
have the same contents with \code{\link[=tbl_check_column]{tbl_check_column()}}.}

\item{check_column_class}{\verb{[logical(1)]}\cr Whether to check that each
columns has the same class in \code{object} and \code{expected}.}

\item{check_column_values}{\verb{[logical(1)]}\cr Whether to check that each
column has the same values in \code{object} and \code{expected}.}

\item{hint}{Include a code feedback hint with the failing message? This
argument only applies to \code{fail()} and \code{fail_if_equal()} and the message is
added using the default options of \code{\link[gradethis:code_feedback]{give_code_feedback()}} and
\code{\link[gradethis:code_feedback]{maybe_code_feedback()}}. The default value of \code{hint} can be set using
\code{\link[gradethis:gradethis_setup]{gradethis_setup()}} or the \code{gradethis.fail.hint} option.}

\item{encourage}{Incude a random encouraging phrase with
\code{\link[gradethis:praise]{random_encouragement()}}? The default value of \code{encourage} can be set
using \code{\link[gradethis:gradethis_setup]{gradethis_setup()}} or the \code{gradethis.fail.encourage} option.}

\item{pass.praise}{Logical \code{TRUE} or \code{FALSE} to determine whether a praising
phrase should be automatically prepended to any \code{\link[gradethis:graded]{pass()}} or
\code{\link[gradethis:pass_if_equal]{pass_if_equal()}} messages. Sets the \code{gradethis.pass.praise} option.}

\item{fail.message}{The feedback \code{message} used by the final, fallback
\code{\link[gradethis:graded]{gradethis::fail()}}.}

\item{fail.hint}{Logical \code{TRUE} or \code{FALSE} to determine whether an automated
code feedback hint should be shown with a \code{\link[gradethis:graded]{fail()}} or \code{\link[gradethis:pass_if_equal]{fail_if_equal()}}
message. Sets the \code{gradethis.fail.hint} option.}

\item{fail.encourage}{Logical \code{TRUE} or \code{FALSE} to determine whether an
encouraging phrase should be automatically appended to any \code{\link[gradethis:graded]{fail()}} or
\code{\link[gradethis:pass_if_equal]{fail_if_equal()}} messages. Sets the \code{gradethis.fail.encourage} option.}
}
\value{
The returned feedback is equivalent to \pkg{gradethis} grading code
using \code{\link[gradethis:grade_this]{grade_this()}} with the following
components:
\enumerate{
\item First the \code{pre_check} code, if any, is evaluated. If this code calls
\code{\link[gradethis:graded]{pass()}}, \code{\link[gradethis:graded]{fail()}}, or their
equivalents, that feedback is provided immediately.
\item If \code{pass_if_equal} is \code{TRUE}, then
\code{\link[gradethis:pass_if_equal]{pass_if_equal()}} is called to compare the
\code{\link[gradethis:grade_this-objects]{.result}} to the
\code{\link[gradethis:grade_this-objects]{.solution}}. The message in \code{correct}
is used for the feedback.
\item The appropriate \pkg{tblcheck} grading function is called, returning
any feedback:
\enumerate{
\item \code{grade_this_table()} returns the results from \code{\link[=tbl_grade]{tbl_grade()}}
\item \code{grade_this_column()} returns the results from \code{\link[=tbl_grade_column]{tbl_grade_column()}}
\item \code{grade_this_vector()} returns the results from \code{\link[=vec_grade]{vec_grade()}}
}
\item The \code{post_check} code, if any, is evaluated and any feedback from a call
to \code{\link[gradethis:graded]{pass()}}, \code{\link[gradethis:graded]{fail()}}, or
their equivalents is returned.
\item Finally, if no other feedback is returned, the feedback from
\code{\link[gradethis:graded]{gradethis::fail()}} is provided to the student, using the options
\code{fail.message}, \code{fail.hint} and \code{fail.encourage}.
}
}
\description{
Automatically grade a table resulting from student code using
\code{\link[gradethis:grade_this]{gradethis::grade_this()}} and \code{\link[=tbl_grade]{tbl_grade()}} to compare the
student's result with the author's solution.
}
\examples{
ex <- gradethis::mock_this_exercise(
  .solution_code = tibble(x = 1:3, y = letters[x]),
  .user_code = tibble(x = 1:3, y = c("A", "b", "c"))
)

## Grading Tables ----
grade_this_table()(ex)

# Roughly equivalent to...
gradethis::grade_this({
  gradethis::pass_if_equal()
  tbl_grade()
  gradethis::fail()
})(ex)
}
\seealso{
\code{\link[=tbl_grade]{tbl_grade()}}

Other graders: 
\code{\link{grade_this_vector}()}
}
\concept{graders}
