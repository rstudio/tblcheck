% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_column.R
\name{tbl_check_column}
\alias{tbl_check_column}
\alias{tbl_grade_column}
\title{Checks that a column is identical across two tables}
\usage{
tbl_check_column(
  column,
  object = .result,
  expected = .solution,
  check_class = TRUE,
  ignore_class = NULL,
  check_length = TRUE,
  check_values = TRUE,
  tolerance = sqrt(.Machine$double.eps),
  check_names = FALSE,
  env = parent.frame()
)

tbl_grade_column(
  column,
  object = .result,
  expected = .solution,
  max_diffs = 3,
  check_class = TRUE,
  ignore_class = NULL,
  check_length = TRUE,
  check_values = TRUE,
  tolerance = sqrt(.Machine$double.eps),
  check_names = FALSE,
  env = parent.frame(),
  ...
)
}
\arguments{
\item{column}{\verb{[character(1)]}\cr The name of the column to check.}

\item{object}{A data frame to be compared to \code{expected}.}

\item{expected}{A data frame containing the expected result.}

\item{check_class}{\verb{[logical(1)]}\cr Whether to check that \code{column} has the
same class in \code{object} and \code{expected}.}

\item{ignore_class}{\verb{[character()]}\cr A vector of classes to ignore when
finding differences between \code{object} and \code{expected}.

If an element is named, differences will only be ignored between the pair
of the element and its name.
For example, \code{ignore_class = c("integer" = "numeric")} will ignore class
differences only if \code{object} has class \link{integer} and \code{expected} has class
\link{numeric}, or vice versa.

If all the classes of \code{expected} are included in \code{ignore_class},
a \code{class} problem will never be returned.}

\item{check_length}{\verb{[logical(1)]}\cr Whether to check that \code{column} has the
same length in \code{object} and \code{expected}.}

\item{check_values}{\verb{[logical(1)]}\cr Whether to check that \code{column} has the
same values in \code{object} and \code{expected}.}

\item{tolerance}{\verb{[numeric(1) â‰¥ 0]}\cr \code{values} differences smaller than
\code{tolerance} are ignored. The default value is close to \code{1.5e-8}.}

\item{check_names}{\verb{[logical(1)]}\cr Whether to check that \code{column} has the
same \link[=names]{names} in \code{object} and \code{expected}.
Defaults to \code{FALSE}.}

\item{env}{The environment in which to find \code{.result} and \code{.solution}.}

\item{max_diffs}{\verb{[numeric(1)]}\cr The maximum number of mismatched values to
print. Defaults to 3.}

\item{...}{
  Arguments passed on to \code{\link[gradethis:graded]{gradethis::fail}}
  \describe{
    \item{\code{hint}}{Include a code feedback hint with the failing message? This
argument only applies to \code{fail()} and \code{fail_if_equal()} and the message is
added using the default options of \code{\link[gradethis:give_code_feedback]{give_code_feedback()}} and
\code{\link[gradethis:maybe_code_feedback]{maybe_code_feedback()}}. The default value of \code{hint} can be set using
\code{\link[gradethis:gradethis_setup]{gradethis_setup()}} or the \code{gradethis.fail.hint} option.}
    \item{\code{encourage}}{Include a random encouraging phrase with
\code{\link[gradethis:random_encouragement]{random_encouragement()}}? The default value of \code{encourage} can be set
using \code{\link[gradethis:gradethis_setup]{gradethis_setup()}} or the \code{gradethis.fail.encourage} option.}
  }}
}
\value{
If there are any issues, a \link{list} from \code{tbl_check_column()} or a
\code{\link[gradethis:graded]{gradethis::fail()}} message from \code{tbl_grade_column()}.
Otherwise, invisibly returns \code{\link{NULL}}.
}
\description{
Checks for differences between the \code{name} column in \code{object} and in
\code{expected} in the following order:
\enumerate{
\item Check that the \code{name} column exists in \code{object}
\item Check class with \code{\link[=vec_check_class]{vec_check_class()}}
\item Check length with \code{\link[=vec_check_dimensions]{vec_check_dimensions()}}
\item If the column is a factor, check factor levels with \code{\link[=vec_check_levels]{vec_check_levels()}}
\item Check column values with \code{\link[=vec_check_values]{vec_check_values()}}
}

If the columns differ
\itemize{
\item \code{tbl_check_column()} returns a list describing the problem
\item \code{tbl_grade_column()} returns a failing grade and informative message
with \code{\link[gradethis:graded]{gradethis::fail()}}
}
}
\section{Problems}{

\enumerate{
\item \code{names} (\code{table_problem}): \code{object} doesn't contain a column named column.
\item \code{class}: Any mismatch in the classes of the \code{column}.
\item \code{length}: The \code{column} doesn't have the expected length.
\item \code{levels_n}, \code{levels}, \code{levels_reversed}, \code{levels_order}:
See \code{\link[=vec_check_levels]{vec_check_levels()}}.
\item \code{values}: The \code{column} doesn't have the expected values.
\item \code{names} (\code{column_problem}): The \code{column} has different \link[=names]{names}
than expected.
\item \code{names_order}: The \code{column} has the same \link[=names]{names} as expected,
but in a different order.
}
}

\examples{
.result <- tibble::tibble(a = 1:10, b = 11:20)
.solution <- tibble::tibble(a = letters[1:10], b = letters[11:20])
tbl_check_column("a")
tbl_grade_column("a")

.result <- tibble::tibble(a = 1:10, b = 11:20)
.solution <- tibble::tibble(a = 1:11, b = 12:22)
tbl_check_column("a")
tbl_grade_column("a")

.result <- tibble::tibble(a = 1:10, b = 11:20)
.solution <- tibble::tibble(a = 11:20, b = 1:10)
tbl_check_column("a")
tbl_grade_column("a")
tbl_grade_column("a", max_diffs = 5)
tbl_grade_column("a", max_diffs = Inf)
}
